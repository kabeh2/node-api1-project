{"version":3,"sources":["components/Nav.jsx","components/ProfileCard.jsx","components/AbsoluteWrapper.jsx","store/actions/actionCreators.jsx","store/actions/actionTypes.js","components/Home.jsx","components/forms/TextInput.jsx","components/forms/UserForm.jsx","components/forms/Form.jsx","components/LayoutTemplate.jsx","App.js","serviceWorker.js","store/reducers/reducer.js","services/authService.jsx","store/sagas/app.saga.js","store/sagas/root-saga.js","store/reducers/index.js","index.js"],"names":["Nav","locationUrl","useLocation","pathname","match","initialState","current","useState","state","setState","onClick","e","key","selectedKeys","mode","style","display","justifyContent","Item","to","TeamOutlined","UserAddOutlined","ProfileCard","name","bio","id","viewMore","deleteUser","users","title","extra","flexBasis","minWidth","margin","flexDirection","actions","EditOutlined","DeleteOutlined","window","confirm","onDeleteUser","AbsoluteWrapper","children","position","width","fetchSuccess","payload","type","fetchError","error","getRequest","withRouter","connect","data","dispatch","useEffect","params","justify","span","flexWrap","map","user","undefined","MyTextInput","textArea","label","props","useField","field","meta","marginBottom","htmlFor","rows","borderColor","touched","className","color","NewBtn","styled","button","addUser","values","updateUser","history","useHistory","location","length","initialValues","validationSchema","Yup","max","required","onSubmit","a","setErrors","setStatus","resetForm","console","log","success","replace","submit","message","ArrowLeftOutlined","SendOutlined","placeholder","Form","md","sm","Content","Layout","LayoutTemplate","useContext","__RouterContext","transitions","useTransition","from","opacity","transform","enter","leave","item","div","path","component","Home","App","Boolean","hostname","fetch","update","reducer","action","apiEndpoint","tryGetRequest","onGetRequest","tryDeleteRequest","onDelete","tryAddUser","onAddUser","tryUpdateUser","onUpdateUser","appSagas","fetchData","axios","get","put","call","dataArray","takeLatest","fetchDelete","delete","usersCopy","updatedUsers","filter","fetchAdd","post","fetchUpdate","all","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f8d60c15.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { Menu } from \"antd\";\nimport { TeamOutlined, UserAddOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\n\nconst Nav = () => {\n  const locationUrl = useLocation().pathname.match(/([a-z])+/gim);\n\n  const initialState = {\n    current: locationUrl === null ? \"home\" : locationUrl[0]\n  };\n\n  const [state, setState] = useState(initialState);\n\n  const handleClick = e => {\n    setState({\n      current: e.key\n    });\n  };\n\n  return (\n    <Menu\n      onClick={handleClick}\n      selectedKeys={[state.current]}\n      mode=\"horizontal\"\n      style={{ display: \"flex\", justifyContent: \"space-between\" }}\n    >\n      <Menu.Item key=\"home\">\n        <Link to=\"/\">\n          <TeamOutlined />\n          Home\n        </Link>\n      </Menu.Item>\n      <Menu.Item key=\"add\">\n        <Link to=\"/add\">\n          <UserAddOutlined />\n          Add/Update\n        </Link>\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"antd\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\n\nfunction ProfileCard({ name, bio, id, viewMore, deleteUser, users }) {\n  const onDeleteUser = (id, users) => {\n    let result = window.confirm(\"Are you sure you want to delete?\");\n    if (result) {\n      deleteUser(id, users);\n    }\n  };\n\n  return (\n    <Card\n      title={name}\n      extra={\n        !viewMore ? <Link to={`/${id}`}>View</Link> : <Link to={`/`}>Back</Link>\n      }\n      style={{\n        flexBasis: \"31%\",\n        minWidth: 300,\n        margin: \"0px 8px 16px 8px\",\n        display: \"flex\",\n        flexDirection: \"column\"\n      }}\n      actions={\n        viewMore\n          ? [\n              <Link\n                to={{\n                  pathname: `/update/${id}`,\n                  state: {\n                    name,\n                    bio,\n                    id\n                  }\n                }}\n              >\n                <EditOutlined key=\"edit\" />\n              </Link>\n            ]\n          : [\n              <DeleteOutlined\n                key=\"delete\"\n                onClick={() => onDeleteUser(id, users)}\n              />,\n              <Link\n                to={{\n                  pathname: `/update/${id}`,\n                  state: {\n                    name,\n                    bio,\n                    id\n                  }\n                }}\n              >\n                <EditOutlined key=\"edit\" />\n              </Link>\n            ]\n      }\n    >\n      <p>{bio}</p>\n    </Card>\n  );\n}\n\nexport default ProfileCard;\n","import React from \"react\";\n\nfunction AbsoluteWrapper({ children }) {\n  return <div style={{ position: \"absolute\", width: \"100%\" }}>{children}</div>;\n}\n\nexport default AbsoluteWrapper;\n","import * as actionTypes from \"./actionTypes\";\n\nexport const fetchRequest = () => ({\n  type: actionTypes.FETCH_REQUEST\n});\n\nexport const fetchSuccess = payload => ({\n  type: actionTypes.FETCH_SUCCESS,\n  payload\n});\n\nexport const fetchUpdate = users => ({\n  type: actionTypes.FETCH_UPDATE,\n  payload: users\n});\n\nexport const fetchError = error => ({\n  type: actionTypes.FETCH_ERROR,\n  payload: error\n});\n\nexport const getRequest = payload => ({\n  type: actionTypes.GET_REQUEST,\n  payload\n});\n\nexport const deleteUser = (id, users) => ({\n  type: actionTypes.DELETE_REQUEST,\n  payload: {\n    id,\n    users\n  }\n});\n\nexport const addUser = values => ({\n  type: actionTypes.ADD_USER,\n  payload: values\n});\n\nexport const updateUser = (values, id) => ({\n  type: actionTypes.UPDATE_USER,\n  payload: {\n    values,\n    id\n  }\n});\n","export const FETCH_REQUEST = \"FETCH_REQUEST\";\nexport const FETCH_SUCCESS = \"FETCH_SUCCESS\";\nexport const FETCH_UPDATE = \"FETCH_UPDATE\";\nexport const FETCH_ERROR = \"FETCH_ERROR\";\n\nexport const GET_REQUEST = \"GET_REQUEST\";\nexport const DELETE_REQUEST = \"DELETE_REQUEST\";\nexport const ADD_USER = \"ADD_USER\";\nexport const UPDATE_USER = \"UPDATE_USER\";\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport ProfileCard from \"./ProfileCard\";\nimport { Row, Col } from \"antd\";\nimport AbsoluteWrapper from \"./AbsoluteWrapper\";\nimport { getRequest, deleteUser } from \"../store/actions/actionCreators\";\n\nfunction Home({ users, getRequest, match, deleteUser }) {\n  useEffect(\n    () => {\n      getRequest(match.params.id && match.params.id);\n    },\n    [getRequest, match.params.id],\n    users\n  );\n\n  return (\n    <AbsoluteWrapper>\n      <Row justify=\"center\" style={{ margin: \"40px 0px\" }}>\n        <Col\n          span={22}\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\"\n          }}\n        >\n          {users &&\n            users.map(user => (\n              <ProfileCard\n                name={user.name}\n                bio={user.bio}\n                id={user.id}\n                key={user.id}\n                deleteUser={deleteUser}\n                users={users}\n                viewMore={match.params.id !== undefined}\n              />\n            ))}\n        </Col>\n      </Row>\n    </AbsoluteWrapper>\n  );\n}\n\nconst mapStateToProps = state => ({\n  users: state.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getRequest: id => dispatch(getRequest(id)),\n  deleteUser: (id, users) => dispatch(deleteUser(id, users))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));\n","import React from \"react\";\nimport { useField } from \"formik\";\nimport { Input } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\n\nconst MyTextInput = ({ textArea, label, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and also replace ErrorMessage entirely.\n  const [field, meta] = useField(props);\n  return (\n    <div style={{ marginBottom: \"16px\" }}>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      {textArea ? (\n        <TextArea\n          rows={4}\n          {...field}\n          {...props}\n          style={{\n            borderColor: meta.touched && meta.error ? \"red\" : \"\"\n          }}\n        />\n      ) : (\n        <Input {...field} {...props} />\n      )}\n\n      {meta.touched && meta.error ? (\n        <div className=\"error\" style={{ color: \"red\" }}>\n          {meta.error}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default MyTextInput;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport { useHistory, useLocation } from \"react-router\";\nimport * as Yup from \"yup\";\nimport { Card } from \"antd\";\nimport { SendOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport styled from \"styled-components\";\nimport MyTextInput from \"./TextInput\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getRequest,\n  addUser,\n  updateUser\n} from \"../../store/actions/actionCreators\";\n\nconst NewBtn = styled.button`\n  width: 100%;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:focus,\n  &:hover {\n    outline: none;\n\n    #submitBtn {\n      color: #1890ff;\n    }\n  }\n`;\n\nfunction UserForm({ users, getRequest, addUser, updateUser }) {\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (users.length === 0) {\n      getRequest();\n    }\n  }, [getRequest, users]);\n\n  return (\n    <Formik\n      initialValues={{\n        name: location.state === undefined ? \"\" : location.state.name,\n        bio: location.state === undefined ? \"\" : location.state.bio\n      }}\n      validationSchema={Yup.object({\n        name: Yup.string()\n          .max(15, \"Must be 15 characters or less\")\n          .required(\"Required\"),\n        bio: Yup.string()\n          .max(150, \"Must be 150 characters or less\")\n          .required(\"Required\")\n      })}\n      onSubmit={async (values, { setErrors, setStatus, resetForm }) => {\n        try {\n          if (!location.state) {\n            console.log(\"Adding user...\");\n            await addUser(values);\n          }\n\n          if (location.state) {\n            console.log(\"Updating user...\");\n            await updateUser(values, location.state.id);\n          }\n          resetForm({});\n          setStatus({ success: true });\n          history.replace(\"/\");\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n        }\n      }}\n    >\n      <Form>\n        <Card\n          title={location.state ? \"Update User\" : \"Add User\"}\n          actions={[\n            <Link to=\"/\">\n              <ArrowLeftOutlined key=\"back\" />\n            </Link>,\n            <NewBtn type=\"submit\">\n              <SendOutlined key=\"submit\" id=\"submitBtn\" />\n            </NewBtn>\n          ]}\n        >\n          <MyTextInput\n            label=\"Name\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Write Name here...\"\n          />\n          <MyTextInput\n            label=\"Bio\"\n            name=\"bio\"\n            type=\"text\"\n            placeholder=\"Write Bio here...\"\n            textArea\n          />\n        </Card>\n      </Form>\n    </Formik>\n  );\n}\n\nconst mapStateToProps = state => ({\n  users: state.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getRequest: id => dispatch(getRequest(id)),\n  addUser: values => dispatch(addUser(values)),\n  updateUser: (values, id) => dispatch(updateUser(values, id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserForm);\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport UserForm from \"./UserForm\";\nimport AbsoluteWrapper from \"../AbsoluteWrapper\";\n\nfunction Form() {\n  return (\n    <AbsoluteWrapper>\n      <Row justify=\"center\" style={{ margin: \"40px 0\" }}>\n        <Col span={22} md={10} sm={16} className=\"gutter-row\">\n          <UserForm />\n        </Col>\n      </Row>\n    </AbsoluteWrapper>\n  );\n}\n\nexport default Form;\n","import React, { useContext } from \"react\";\nimport { Layout } from \"antd\";\nimport { Route, Switch, __RouterContext } from \"react-router-dom\";\nimport { useTransition, animated } from \"react-spring\";\nimport Nav from \"./Nav\";\nimport Home from \"./Home\";\nimport Form from \"./forms/Form\";\n\nconst { Content } = Layout;\n\nconst LayoutTemplate = () => {\n  const { location } = useContext(__RouterContext);\n  const transitions = useTransition(location, location => location.pathname, {\n    from: { opacity: 0, transform: \"translate(100%,0)\" },\n    enter: { opacity: 1, transform: \"translate(0%,0)\" },\n    leave: { opacity: 0, transform: \"translate(-50%,0)\" }\n  });\n  return (\n    <>\n      <header>\n        <Nav />\n      </header>\n      <Content>\n        {transitions.map(({ item, props, key }) => (\n          <animated.div key={key} style={props}>\n            <Switch location={item}>\n              <Route path=\"/update/:id\" component={Form} />\n              <Route path=\"/add\" component={Form} />\n              <Route path=\"/:id\" component={Home} />\n              <Route path=\"/\" component={Home} />\n            </Switch>\n          </animated.div>\n        ))}\n      </Content>\n    </>\n  );\n};\n\nexport default LayoutTemplate;\n","import React from \"react\";\nimport LayoutTemplate from \"./components/LayoutTemplate\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LayoutTemplate />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  fetch: false,\n  data: [],\n  error: \"\",\n  update: {}\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_REQUEST:\n      return {\n        ...state,\n        fetch: true,\n        update: {}\n      };\n    case actionTypes.FETCH_SUCCESS:\n      return {\n        ...state,\n        fetch: false,\n        data: action.payload,\n        error: \"\"\n      };\n    case actionTypes.FETCH_UPDATE:\n      return {\n        ...state,\n        fetch: false,\n        error: \"\",\n        update: action.payload\n      };\n    case actionTypes.FETCH_ERROR:\n      return {\n        ...state,\n        fetch: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const apiEndpoint = \"https://node-api1-project.herokuapp.com/api/users\";\n","import { all, takeLatest, call, put } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { fetchRequest, fetchSuccess, fetchError } from \"../actions/index\";\nimport * as actionTypes from \"../actions/actionTypes\";\nimport { apiEndpoint } from \"../../services/authService\";\n\nasync function fetchData(id) {\n  const { data } = await axios.get(`${apiEndpoint}/${id ? id : \"\"}`);\n  return data;\n}\n\nexport function* tryGetRequest(action) {\n  try {\n    yield put(fetchRequest());\n    const data = yield call(fetchData, action.payload);\n\n    const id = action.payload;\n    let dataArray;\n\n    if (id) {\n      dataArray = [data];\n    } else {\n      dataArray = [...data];\n    }\n\n    yield put(fetchSuccess(dataArray));\n  } catch (error) {\n    yield put(fetchError(error.message));\n  }\n}\n\nexport function* onGetRequest() {\n  yield takeLatest(actionTypes.GET_REQUEST, tryGetRequest);\n}\n\nasync function fetchDelete(id) {\n  return await axios.delete(`${apiEndpoint}/${id}`);\n}\n\nexport function* tryDeleteRequest(action) {\n  yield put(fetchRequest());\n\n  const usersCopy = [...action.payload.users];\n\n  const updatedUsers = [...action.payload.users].filter(\n    user => user.id !== action.payload.id\n  );\n\n  yield put(fetchSuccess(updatedUsers));\n  try {\n    console.log(\"DELETE: \", action);\n    yield call(fetchDelete, action.payload.id);\n  } catch (error) {\n    console.log(error);\n    yield put(fetchSuccess(usersCopy));\n    yield put(fetchError(error.message));\n  }\n}\n\nexport function* onDelete() {\n  yield takeLatest(actionTypes.DELETE_REQUEST, tryDeleteRequest);\n}\n\nasync function fetchAdd(values) {\n  return await axios.post(`${apiEndpoint}`, values);\n}\n\nexport function* tryAddUser(action) {\n  yield put(fetchRequest());\n\n  try {\n    yield call(fetchAdd, action.payload);\n    console.log(\"USER ADDED...\");\n  } catch (error) {\n    console.log(\"ADD USER ERROR: \", error.message);\n    yield put(fetchError(error.message));\n  }\n}\n\nexport function* onAddUser() {\n  yield takeLatest(actionTypes.ADD_USER, tryAddUser);\n}\n\nconst fetchUpdate = async ({ values, id }) => {\n  return await axios.put(`${apiEndpoint}${id}`, values);\n};\n\nexport function* tryUpdateUser(action) {\n  yield put(fetchRequest());\n\n  try {\n    yield call(fetchUpdate, {\n      values: action.payload.values,\n      id: action.payload.id\n    });\n  } catch (error) {\n    console.log(\"UPDATE USER ERROR: \", error.message);\n    yield put(fetchError(error.message));\n  }\n}\n\nexport function* onUpdateUser() {\n  yield takeLatest(actionTypes.UPDATE_USER, tryUpdateUser);\n}\n\nexport function* appSagas() {\n  yield all([\n    call(onGetRequest),\n    call(onDelete),\n    call(onAddUser),\n    call(onUpdateUser)\n  ]);\n}\n","import { all, call } from \"redux-saga/effects\";\nimport { appSagas } from \"./app.saga\";\n\nexport default function* rootSaga() {\n  yield all([call(appSagas)]);\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducer from \"./reducer\";\nimport rootSaga from \"../sagas/root-saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport store from \"./store/reducers\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}